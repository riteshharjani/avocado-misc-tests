name: xfstests

on:
  push:
    branches:
      - '**'
    paths:
      - 'fs/xfstests.py'
      - '.github/workflows/xfstests*'
  pull_request:
    branches:
      - '**'
    paths:
      - 'fs/xfstests.py'
      - '.github/workflows/xfstests*'
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  id-token: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - fs/xfstests.py.data/ext2/test.yaml
          - fs/xfstests.py.data/ext4/test.yaml
          - fs/xfstests.py.data/xfs/test.yaml
          - fs/xfstests.py.data/btrfs/test.yaml
        container:
          - ubuntu:latest
          - fedora:latest # Add images for CentOS, RHEL, SLES, etc. here

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Create directories for the results
        run: mkdir -p avocado-results

      - name: Docker Run
        run: |
            docker run --privileged -d --name avocado_test_container \
                        -v ${{ github.workspace }}:/workspace \
                        -v $PWD/avocado-results:/root/avocado/job-results \
                        ${{ matrix.container }} sleep infinity

      - name: Install dependencies
        run: |
          docker exec avocado_test_container bash -c "\
          if [[ '${{ matrix.container }}' == 'ubuntu:latest' ]]; then \
            apt-get update && apt-get -y upgrade && apt-get install -y build-essential python3 python3-pip git; \
          elif [[ '${{ matrix.container }}' == 'fedora:latest' ]]; then \
            dnf -y update && dnf -y groupinstall 'Development Tools' && dnf -y install python3 python3-pip git which; \
          fi && \
          pip3 install avocado-framework && \
          pip3 install avocado-framework-plugin-varianter-yaml-to-mux \
          "

      - name: Run xfstests.py with Avocado
        run: |
          docker exec avocado_test_container bash -c "cd /workspace && avocado --show test run fs/xfstests.py --max-parallel-tasks 1 -m ${{ matrix.config }}"

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: "xfstests_${{matrix.config}}"
          path: ./avocado-results/

      - name: "Publish results"
        continue-on-error: true
        uses: mikepenz/action-junit-report@v3
        with:
          commit: ${{ github.sha }}
          detailed_summary: true
          annotate_notice: true
          include_passed: true
          report_paths: './avocado-results/**/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
